import csv
import os
import wave
import pandas as pd
import shutil as sh


#Some nice Functions
def appendToDatadic (fName, ms, length, sr, q, ic, im, ich, the, sal, imp):
    global data_dic
    data_dic['filename'].append(fName)
    data_dic['mainSound'].append(ms)
    data_dic['length'].append(length)
    data_dic['sampleRate'].append(sr)
    data_dic['quality'].append(q)
    data_dic['isCut'].append(ic)
    data_dic['isMixed'].append(im)
    data_dic['isChecked'].append(ich)
    data_dic['threat'].append(the)
    data_dic['salience'].append(sal)
    data_dic['importance'].append(imp)


#With this Code Ill sort all the Audiodate we got into one Folder and label it
##with a csv File containing following information (Ziemlich selbsterklärend lol):
'''   
    'filename':     Name of the File (without .wav)
    'mainSound':    The most important sound of the audiofile
    'length':       Length of the File in s
    'sampleRate':   Samplerate in Hz
    'quality':      Rated Quality of the File (Noise, Loundness, etc.)
    'isCut':        Is the File part of something bigger
    'is Mixed':     Does the Audio Signal contain multiple Audiosources
    'isChecked':    How many Times was the File quality Checked
    'threat':       Threat level of main Audio source (0-9)
    'salience':     Salience of main Audio source (0-9)
    'importance':   Importance of main Audio source (0-9)
'''
#And always Remember: 0 is false!


#The general Path to the Audiodata and the Destinationpath
path = r"F:\Raw_Audio"
destPath = r"F:\Labeled_Audio"
csvPath = r"F:\labeled_audio_data.csv"

failedFiles = [];

#Python dictionary containing all the needed data for the labeling

data_dic = {
    'filename': [],
    'mainSound': [],
    'length': [],
    'sampleRate': [],
    'quality': [],
    'isCut': [],
    'isMixed': [],
    'isChecked': [],
    'threat': [],
    'salience': [],
    'importance': []
}

Animals = ["dog", "rooster", "pig", "cow", "frog", "cat", "hen", "insects", "sheep", "crow"]
Natural = ["rain", "sea_waves", "crickets", "chirping_birds", "water_drops", "wind", "pouring_water", "toilet_flush", "thunderstorm"]
Human   = ["sneezing", "clapping", "breathing", "coughing", "footsteps", "laughing", "brushing_teeth", "drinking_sipping", "snoring"]
Interior= ["door_wood_knock", "mouse_click", "keyboard_typing", "door_wood_creaks", "can_opening", "washing_machine", "vacuum_cleaner", "clock_tick", "glass_breaking"]
Exterior= ["helicopter", "chainsaw", "engine", "train", "church_bells", "airplane", "hand_saw"]

#Try to open the CSV to see if there is already Data in there
if os.path.exists(csvPath):
    print("Label Datei existiert, wird erweitert...")
    hdr = True
    dataFrame  = pd.read_csv(csvPath)
    dfDic = dataFrame.to_dict('list')
    dfKeys = dfDic.keys()
    dicKeys = data_dic.keys()
    for k in dicKeys:
        if k in dicKeys:
            data_dic[k] = dfDic[k]
else:
    print("Neue Datei wird angelegt.")
    hdr = False

#Lets begin sorting the Google Dataset 
#Done!!!!! (Code ist seperat gespeichert, falls noch änderungen auftrerten sollten)
sourceCSVPath   = r"F:\Raw_Audio\ESC-50-master\meta\esc50.csv"
sourceAudioPath = r"F:\Raw_Audio\ESC-50-master\audio"

#Open&format the source CSV to get them data
escDic = pd.read_csv(sourceCSVPath).to_dict('list')
escKeys = escDic.keys()
print(escKeys)

for f in range(len(escDic['filename'])):

    #Categorization
    if escDic['category'][f] == "crackling_fire":
        mainSound  = "fire"
        threat     = 6
        salience   = 4
        importance = 6
    elif escDic['category'][f] == "crying_baby":
        mainSound  = "crying_baby"
        threat     = 0
        salience   = 9
        importance = 7
    elif escDic['category'][f] == "clock_alarm":
        mainSound  = "clock_alarm"
        threat     = 0
        salience   = 9
        importance = 3
    elif escDic['category'][f] == "fireworks":
        mainSound  = "fireworks"
        threat     = 0
        salience   = 9
        importance = 0
    elif escDic['category'][f] == "siren":
        mainSound  = "siren"
        threat     = 8
        salience   = 9
        importance = 9
    elif escDic['category'][f] == "car_horn":
        mainSound  = "car_horn"
        threat     = 7
        salience   = 9
        importance = 9
    elif escDic['category'][f] in Animals:
        mainSound  = "animal"
        threat     = 2
        salience   = 5
        importance = 0
    elif escDic['category'][f] in Natural:
        mainSound  = "natural"
        threat     = 2
        salience   = 3
        importance = 2
    elif escDic['category'][f] in Human:
        mainSound  = "human"
        threat     = 0
        salience   = 5
        importance = 0
    elif escDic['category'][f] in Interior:
        mainSound  = "interior"
        threat     = 0
        salience   = 7
        importance = 0
    elif escDic['category'][f] in Exterior:
        mainSound  = "exterior"
        threat     = 2
        salience   = 5
        importance = 5
    else:
        print("Du opfer hast was falsch geschrieben!")


    try:
        a = escDic['filename'][f]
        fName = a[:-4]
        if fName not in data_dic['filename']:
            filepath = os.path.join(sourceAudioPath, a)
            with wave.open(filepath) as aFile:
                sr = aFile.getframerate()
                length = aFile.getnframes() / sr
                if length <= 0.5:
                    print("Datei:" + fName)
                    print("Datei zu kurz, wird nicht kopiert/beschriftet!")
                else:
                    appendToDatadic(fName, mainSound, length, sr, 7,   1, 0, 0,   threat, salience, importance)
                    sh.copy(filepath, destPath)
    except:
        print("Datei:" + fName)
        print("Failed to append File to Dict")
        failedFiles.append(a)

print("Failed Files:")
print(failedFiles)

#Overwrite the list of lables
dataFrame = pd.DataFrame.from_dict(data_dic)

dataFrame.to_csv(csvPath, header='column_names')